version: '3.9'

# Production overrides for docker-compose.yml
# Use with: docker compose -f docker-compose.yml -f docker-compose.prod.yml up

services:
  postgres:
    restart: always
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    secrets:
      - db_password
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 256mb --maxmemory-policy allkeys-lru
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  keycloak:
    restart: always
    command: start --optimized
    environment:
      KC_HOSTNAME: ${KEYCLOAK_HOSTNAME}
      KC_HOSTNAME_STRICT_HTTPS: true
      KC_HTTPS_CERTIFICATE_FILE: /opt/keycloak/conf/server.crt.pem
      KC_HTTPS_CERTIFICATE_KEY_FILE: /opt/keycloak/conf/server.key.pem
      KC_PROXY: edge
      KC_HTTP_ENABLED: false
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_LOG_LEVEL: WARN
    volumes:
      - ./ssl/keycloak:/opt/keycloak/conf:ro
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  openfga:
    restart: always
    environment:
      OPENFGA_PLAYGROUND_ENABLED: false
      OPENFGA_LOG_LEVEL: warn
      OPENFGA_DATASTORE_MAX_OPEN_CONNS: 20
      OPENFGA_DATASTORE_MAX_IDLE_CONNS: 10
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    restart: always
    environment:
      NODE_ENV: production
      PORT: 3000
    volumes: []
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  admin-portal:
    build:
      context: ./frontend/admin-portal
      dockerfile: Dockerfile
      target: production
    restart: always
    environment:
      NODE_ENV: production
    volumes: []
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  user-portal:
    build:
      context: ./frontend/user-portal
      dockerfile: Dockerfile
      target: production
    restart: always
    environment:
      NODE_ENV: production
    volumes: []
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  nginx:
    restart: always
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./ssl/nginx:/etc/nginx/ssl:ro
      - ./nginx/conf.d/prod:/etc/nginx/conf.d:ro
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

secrets:
  db_password:
    external: true